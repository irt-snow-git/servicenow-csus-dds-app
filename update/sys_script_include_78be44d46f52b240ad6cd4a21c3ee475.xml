<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_casus_printsmart.submitMultiple</api_name>
        <client_callable>true</client_callable>
        <description>Receives multiple data objects to manually submit into a table. </description>
        <name>submitMultiple</name>
        <script><![CDATA[var submitMultiple = Class.create();
submitMultiple.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	nowDateTime: function () {
		return new GlideDate();

	},
	
	submitSupplyReceived: function() {
		
		var gr = new GlideRecord('x_casus_printsmart_supplies_received');
		gr.initialize(); 
		gr.supply_type = this.getParameter('sysparm_supply_type'); //sys_id
		gr.quantity_received = this.getParameter('sysparm_quantity_received'); //int
		//var date = new Date(this.getParameter('sysparm_received_date'));
		var date = new GlideDate();
		date.setValue(this.getParameter('sysparm_received_date'));
		gr.received_date = date;
		gr.insert();
		return true;
	},
	
	submitSupplyOrder: function() {
		
		var gr = new GlideRecord('x_casus_printsmart_supply_orders');
		gr.initialize(); 
		gr.supply_type = this.getParameter('sysparm_supply_type'); //sys_id
		gr.amount_ordered = this.getParameter('sysparm_amount_ordered'); //int
		var date = new GlideDate();
		date.setValue(this.getParameter('sysparm_ordered'));
		gr.ordered = date;
		gr.insert();
		return true;
	},
	
	submitSupplyDelivery: function() {
		
		var gr = new GlideRecord('x_casus_printsmart_supply_deliveries');
		gr.initialize(); 
		gr.supply_type = this.getParameter('sysparm_supply_type'); //sys_id
		gr.amount_of_boxes_delivered = this.getParameter('sysparm_amount_of_boxes_delivered'); //int
		gr.location = this.getParameter('sysparm_location'); //sys_id
		var date = new GlideDate();
		date.setValue(this.getParameter('sysparm_delivered'));
		gr.delivered = date;
		gr.insert();
		return true;
	},
	
	getSupplyTableReferences: function() {
		//Query to get supplies , send sys_id and supply_type
		var gr = new GlideRecord('x_casus_printsmart_supplies');
		gr.query();
		while (gr.next()) {
			var supply = this.newItem("supply");
			supply.setAttribute("sys_id", gr.sys_id);
			supply.setAttribute("supply_type", gr.supply_type);
		}
	},
	
	getLocationReferences: function() {
		var temp = {};
		var gr = new GlideRecord('u_dds_devices');
		gr.query();
		while (gr.next()) {
			var id = gr.u_location;
			//Check if we already have this value
			if (temp[id] !== '1') {
				var da = this.newItem("location");
				da.setAttribute("sys_id", id);
				da.setAttribute("location", gr.getDisplayValue('u_location'));
				temp[id] = '1';
			}
		}
	},

    type: 'submitMultiple'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>gg622</sys_created_by>
        <sys_created_on>2017-04-18 22:11:17</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>78be44d46f52b240ad6cd4a21c3ee475</sys_id>
        <sys_mod_count>38</sys_mod_count>
        <sys_name>submitMultiple</sys_name>
        <sys_package display_value="PrintSmart Inventory Management" source="x_casus_printsmart">3aaadc790fe7ea0012e4348ce1050e16</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="PrintSmart Inventory Management">3aaadc790fe7ea0012e4348ce1050e16</sys_scope>
        <sys_update_name>sys_script_include_78be44d46f52b240ad6cd4a21c3ee475</sys_update_name>
        <sys_updated_by>gg622</sys_updated_by>
        <sys_updated_on>2017-05-19 22:58:43</sys_updated_on>
    </sys_script_include>
</record_update>
